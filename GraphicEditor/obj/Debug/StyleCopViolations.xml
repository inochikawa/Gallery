<StyleCopViolations>
  <Violation LineNumber="20" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\ChildWondows\ColorPickerChildWindow.cs" RuleNamespace="StyleCop.CSharp.CsParser" Rule="SyntaxException" RuleId="SA0102">A syntax error has been discovered in file D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\ChildWondows\ColorPickerChildWindow.cs on line 20.</Violation>
  <Violation LineNumber="23" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\ChildWondows\ZoomBoxChildWindow.cs" RuleNamespace="StyleCop.CSharp.CsParser" Rule="SyntaxException" RuleId="SA0102">A syntax error has been discovered in file D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\ChildWondows\ZoomBoxChildWindow.cs on line 23.</Violation>
  <Violation LineNumber="26" StartLine="26" StartColumn="47" EndLine="26" EndColumn="47" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\WindowParameters.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="ClosingParenthesisMustBeSpacedCorrectly" RuleId="SA1009">Invalid spacing around the closing parenthesis.</Violation>
  <Violation Section="Root.GraphicEditor.Model.ChildWindowBehavior.Factories.LayersChildWindowFactory.GraphicContentOnOnLayerRemove%Layer" LineNumber="45" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\Factories\LayersChildWindowFactory.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation Section="Root.GraphicEditor.Model.ChildWindowBehavior.Factories.LayersChildWindowFactory.GraphicContentOnOnLayerRemove%Layer" LineNumber="47" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\Factories\LayersChildWindowFactory.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation Section="Root.GraphicEditor.Model.ChildWindowBehavior.Factories.LayersChildWindowFactory.GraphicContentOnOnLayerRemove%Layer" LineNumber="49" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\Factories\LayersChildWindowFactory.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation Section="Root.GraphicEditor.Model.ChildWindowBehavior.Factories.LayersChildWindowFactory.GraphicContentOnOnLayerRemove%Layer" LineNumber="63" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\Factories\LayersChildWindowFactory.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation Section="Root.GraphicEditor.Model.ChildWindowBehavior.Factories.LayersChildWindowFactory.Path" LineNumber="15" StartLine="15" StartColumn="16" EndLine="15" EndColumn="17" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\Factories\LayersChildWindowFactory.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CodeMustNotContainMultipleWhitespaceInARow" RuleId="SA1025">The code contains multiple spaces in a row. Only one space is needed.</Violation>
  <Violation Section="Root.GraphicEditor.Model.ChildWindowBehavior.Factories.ZoomBoxChildWindowFactory" LineNumber="10" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\Factories\ZoomBoxChildWindowFactory.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The class must have an access modifier.</Violation>
  <Violation Section="Root.GraphicEditor.Model.ChildWindowBehavior.Factories.ZoomBoxChildWindowFactory.Path" LineNumber="12" StartLine="12" StartColumn="16" EndLine="12" EndColumn="17" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\Factories\ZoomBoxChildWindowFactory.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CodeMustNotContainMultipleWhitespaceInARow" RuleId="SA1025">The code contains multiple spaces in a row. Only one space is needed.</Violation>
  <Violation Section="Root.GraphicEditor.Model.ChildWindowBehavior.Factories.ZoomBoxChildWindowFactory.LoadState" LineNumber="42" StartLine="42" StartColumn="13" EndLine="42" EndColumn="14" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\Factories\ZoomBoxChildWindowFactory.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="KeywordsMustBeSpacedCorrectly" RuleId="SA1000">The spacing around the keyword 'if' is invalid.</Violation>
  <Violation LineNumber="20" Source="D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\ChildWondows\LayersViewChildWindow.cs" RuleNamespace="StyleCop.CSharp.CsParser" Rule="SyntaxException" RuleId="SA0102">A syntax error has been discovered in file D:\GitHub\Gallery\GraphicEditor\Model\ChildWindowBehavior\ChildWondows\LayersViewChildWindow.cs on line 20.</Violation>
  <Violation LineNumber="92" StartLine="92" StartColumn="14" EndLine="92" EndColumn="15" Source="D:\GitHub\Gallery\GraphicEditor\Model\Commands\CommandReceiver.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="KeywordsMustBeSpacedCorrectly" RuleId="SA1000">The spacing around the keyword 'if' is invalid.</Violation>
  <Violation LineNumber="31" StartLine="31" StartColumn="22" EndLine="31" EndColumn="23" Source="D:\GitHub\Gallery\GraphicEditor\Model\Commands\InsertImageCommand.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="KeywordsMustBeSpacedCorrectly" RuleId="SA1000">The spacing around the keyword 'if' is invalid.</Violation>
  <Violation LineNumber="45" Source="D:\GitHub\Gallery\GraphicEditor\Model\Commands\MoveCommand.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationTextMustContainWhitespace" RuleId="SA1630">The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</Violation>
  <Violation LineNumber="6" Source="D:\GitHub\Gallery\GraphicEditor\Model\Commands\OpenImageCommand.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The class must have an access modifier.</Violation>
  <Violation LineNumber="29" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\GraphicBuilderBehavior\ImageBuilder.cs" RuleNamespace="StyleCop.CSharp.CsParser" Rule="SyntaxException" RuleId="SA0102">A syntax error has been discovered in file D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\GraphicBuilderBehavior\ImageBuilder.cs on line 29.</Violation>
  <Violation LineNumber="139" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\GraphicContent.cs" RuleNamespace="StyleCop.CSharp.CsParser" Rule="SyntaxException" RuleId="SA0102">A syntax error has been discovered in file D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\GraphicContent.cs on line 139.</Violation>
  <Violation LineNumber="23" StartLine="23" StartColumn="14" EndLine="23" EndColumn="15" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\ToolProperties\GraphicToolProperties.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="KeywordsMustBeSpacedCorrectly" RuleId="SA1000">The spacing around the keyword 'if' is invalid.</Violation>
  <Violation LineNumber="48" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\LineTool.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="48" StartLine="48" StartColumn="14" EndLine="48" EndColumn="58" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\LineTool.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="49" StartLine="49" StartColumn="14" EndLine="49" EndColumn="16" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\LineTool.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="54" StartLine="54" StartColumn="14" EndLine="54" EndColumn="27" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\LineTool.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="9" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\PointerTool.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="9" StartLine="9" StartColumn="29" EndLine="9" EndColumn="29" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\PointerTool.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SymbolsMustBeSpacedCorrectly" RuleId="SA1003">The spacing around the symbol '=' is invalid.</Violation>
  <Violation LineNumber="20" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\PointerTool.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation LineNumber="33" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\PointerTool.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation LineNumber="43" Source="D:\GitHub\Gallery\GraphicEditor\Model\ToolBehavior\PointerTool.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation LineNumber="38" Source="D:\GitHub\Gallery\GraphicEditor\Model\Layer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="40" Source="D:\GitHub\Gallery\GraphicEditor\Model\Layer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="42" Source="D:\GitHub\Gallery\GraphicEditor\Model\Layer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="64" Source="D:\GitHub\Gallery\GraphicEditor\Model\RelayCommand.cs" RuleNamespace="StyleCop.CSharp.CsParser" Rule="SyntaxException" RuleId="SA0102">A syntax error has been discovered in file D:\GitHub\Gallery\GraphicEditor\Model\RelayCommand.cs on line 64.</Violation>
  <Violation LineNumber="38" Source="D:\GitHub\Gallery\GraphicEditor\App.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="22" Source="D:\GitHub\Gallery\GraphicEditor\App.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="29" Source="D:\GitHub\Gallery\GraphicEditor\App.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="29" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="31" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="52" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all events.</Violation>
  <Violation LineNumber="44" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="118" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="124" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="130" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="136" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="138" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation LineNumber="138" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation LineNumber="138" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="157" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementParametersMustBeDocumented" RuleId="SA1611">The documentation header must contain param tags matching the element's parameter list.</Violation>
  <Violation LineNumber="157" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\ColorPickerVIewModel.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementReturnValueMustBeDocumented" RuleId="SA1615">The documentation header must contain a returns tag since the element has a return value.</Violation>
  <Violation LineNumber="31" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\LayersViewViewModel.cs" RuleNamespace="StyleCop.CSharp.CsParser" Rule="SyntaxException" RuleId="SA0102">A syntax error has been discovered in file D:\GitHub\Gallery\GraphicEditor\ViewModel\LayersViewViewModel.cs on line 31.</Violation>
  <Violation LineNumber="43" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="37" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="InstanceReadonlyElementsMustAppearBeforeInstanceNonReadonlyElements" RuleId="SA1215">All non-static readonly private fields must be placed before all non-static non-readonly private fields.</Violation>
  <Violation LineNumber="38" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="InstanceReadonlyElementsMustAppearBeforeInstanceNonReadonlyElements" RuleId="SA1215">All non-static readonly private fields must be placed before all non-static non-readonly private fields.</Violation>
  <Violation LineNumber="39" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="InstanceReadonlyElementsMustAppearBeforeInstanceNonReadonlyElements" RuleId="SA1215">All non-static readonly private fields must be placed before all non-static non-readonly private fields.</Violation>
  <Violation LineNumber="40" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="InstanceReadonlyElementsMustAppearBeforeInstanceNonReadonlyElements" RuleId="SA1215">All non-static readonly private fields must be placed before all non-static non-readonly private fields.</Violation>
  <Violation LineNumber="68" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="72" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="84" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="96" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="108" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="120" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="133" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="146" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="159" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="165" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="173" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="175" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="177" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="183" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="189" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="195" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="201" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="207" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all properties.</Violation>
  <Violation LineNumber="213" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="367" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="376" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="381" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="386" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="391" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="399" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="318" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\MainWindowViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="18" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\StatusBarViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="28" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\StatusBarViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="38" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\StatusBarViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="48" Source="D:\GitHub\Gallery\GraphicEditor\ViewModel\StatusBarViewModel.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="9" Source="D:\GitHub\Gallery\GraphicEditor\View\Styles\FlatInnerWindow.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All internal classes must be placed after all public classes.</Violation>
  <Violation LineNumber="24" Source="D:\GitHub\Gallery\GraphicEditor\View\Styles\FlatInnerWindow.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="24" Source="D:\GitHub\Gallery\GraphicEditor\View\Styles\FlatInnerWindow.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FileMayOnlyContainASingleClass" RuleId="SA1402">A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Violation>
  <Violation LineNumber="26" Source="D:\GitHub\Gallery\GraphicEditor\View\Styles\FlatInnerWindow.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="24" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private fields must be placed after all public fields.</Violation>
  <Violation LineNumber="56" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="148" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="153" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="158" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all public methods.</Violation>
  <Violation LineNumber="86" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainEmptyStatements" RuleId="SA1106">The code contains an extra semicolon.</Violation>
  <Violation LineNumber="86" StartLine="86" StartColumn="45" EndLine="86" EndColumn="45" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SemicolonsMustBeSpacedCorrectly" RuleId="SA1002">Invalid spacing around the semicolon.</Violation>
  <Violation LineNumber="102" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="BlockStatementsMustNotContainEmbeddedComments" RuleId="SA1108">A comment may not be placed within the bracketed statement.</Violation>
  <Violation LineNumber="102" StartLine="102" StartColumn="71" EndLine="102" EndColumn="77" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="132" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation LineNumber="132" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ChildWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation LineNumber="9" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\ColorPicker.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the summary tag contains incorrectly spelled words: xaml</Violation>
  <Violation LineNumber="98" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\LayerItem.cs" RuleNamespace="StyleCop.CSharp.CsParser" Rule="SyntaxException" RuleId="SA0102">A syntax error has been discovered in file D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\LayerItem.cs on line 98.</Violation>
  <Violation LineNumber="10" StartLine="10" StartColumn="26" EndLine="10" EndColumn="26" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SymbolsMustBeSpacedCorrectly" RuleId="SA1003">The spacing around the symbol ':' is invalid.</Violation>
  <Violation LineNumber="36" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private fields must be placed after all public fields.</Violation>
  <Violation LineNumber="39" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private fields must be placed after all public fields.</Violation>
  <Violation LineNumber="28" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="56" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="68" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="54" StartLine="54" StartColumn="14" EndLine="54" EndColumn="80" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="55" StartLine="55" StartColumn="14" EndLine="55" EndColumn="39" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="68" StartLine="68" StartColumn="14" EndLine="68" EndColumn="56" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="87" StartLine="87" StartColumn="41" EndLine="87" EndColumn="121" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="StatementMustNotUseUnnecessaryParenthesis" RuleId="SA1119">The line contains unnecessary parenthesis.</Violation>
  <Violation LineNumber="87" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation LineNumber="90" StartLine="90" StartColumn="43" EndLine="90" EndColumn="123" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="StatementMustNotUseUnnecessaryParenthesis" RuleId="SA1119">The line contains unnecessary parenthesis.</Violation>
  <Violation LineNumber="90" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation LineNumber="104" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation LineNumber="105" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation LineNumber="113" StartLine="113" StartColumn="14" EndLine="113" EndColumn="70" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="114" StartLine="114" StartColumn="14" EndLine="114" EndColumn="72" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="116" StartLine="116" StartColumn="14" EndLine="116" EndColumn="92" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="117" StartLine="117" StartColumn="14" EndLine="117" EndColumn="89" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="135" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation LineNumber="136" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\CSharpFiles\ZoomBox.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation LineNumber="8" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\LayersView.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the summary tag contains incorrectly spelled words: xaml</Violation>
  <Violation LineNumber="21" Source="D:\GitHub\Gallery\GraphicEditor\View\UserControls\StatusBar.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the summary tag contains incorrectly spelled words: xaml</Violation>
  <Violation LineNumber="40" Source="D:\GitHub\Gallery\GraphicEditor\View\Windows\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="50" Source="D:\GitHub\Gallery\GraphicEditor\View\Windows\MainWindow.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
</StyleCopViolations>